name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

jobs:
  snyk-security-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Add a timeout to prevent indefinite hangs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a recent Node.js version for Snyk to run
      - name: Install dependencies for Snyk scan
        run: npm install --prefer-offline --no-audit --progress=false --loglevel=error # Make npm install more robust and quiet

      - name: Run Snyk Open Source (Dependency) scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} # Authenticate with Snyk using the secret you added
        with:
          args: --all-projects --json-file=snyk-oss-results.json --fail-on=all --debug # <--- ADDED --debug
          # Output to JSON, fail on any vulnerability, and enable debug logging

      - name: Run Snyk Code (SAST) scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} # Authenticate with Snyk using the secret
        with:
          args: code test --json-file=snyk-code-results.json --fail-on=all --debug # <--- ADDED --debug
          # Explicitly run Snyk Code scan, output to JSON, fail on any vulnerability, and enable debug logging

  test:
    needs: snyk-security-scan # Ensure 'test' only runs if 'snyk-security-scan' succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies for tests
        run: npm install

      - name: Run tests
        run: npm test

  deploy:
    needs: [test, snyk-security-scan] # Deploy only runs if BOTH 'test' and 'snyk-security-scan' succeed
    permissions:
      id-token: write # Allows fetching the OIDC token from GitHub for GCP authentication
      contents: read  # Allows the 'actions/checkout' step to read your repository content

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/556268819010/locations/global/workloadIdentityPools/ghpool/providers/github-provider'
          service_account: 'gha-cloudrun-deployer@iapvm123.iam.gserviceaccount.com'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: 'iapvm123'

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/iapvm123/repo/my-app:$GITHUB_SHA .

      - name: Push Docker image
        run: |
          docker push us-central1-docker.pkg.dev/iapvm123/repo/my-app:$GITHUB_SHA

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-cloud-run-service \
            --image us-central1-docker.pkg.dev/iapvm123/repo/my-app:$GITHUB_SHA \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated